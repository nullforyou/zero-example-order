// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package server

import (
	"context"

	"greet-pb/order/types/order"
	"order/cmd/rpc/internal/logic"
	"order/cmd/rpc/internal/svc"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	order.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

// 创建订单
func (s *OrderServer) CreateOrder(ctx context.Context, in *order.CreateOrderReq) (*order.CreateOrderReply, error) {
	l := logic.NewCreateOrderLogic(ctx, s.svcCtx)
	return l.CreateOrder(in)
}

// 关闭订单
func (s *OrderServer) CloseOrder(ctx context.Context, in *order.CloseOrderReq) (*order.CloseOrderReply, error) {
	l := logic.NewCloseOrderLogic(ctx, s.svcCtx)
	return l.CloseOrder(in)
}

// 关闭订单
func (s *OrderServer) CancelOrder(ctx context.Context, in *order.CancelOrderReq) (*order.CancelOrderReply, error) {
	l := logic.NewCancelOrderLogic(ctx, s.svcCtx)
	return l.CancelOrder(in)
}

// 删除订单
func (s *OrderServer) DeleteOrder(ctx context.Context, in *order.DeleteOrderReq) (*order.DeleteOrderReply, error) {
	l := logic.NewDeleteOrderLogic(ctx, s.svcCtx)
	return l.DeleteOrder(in)
}
